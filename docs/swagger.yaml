basePath: /
definitions:
  models.Building:
    properties:
      address:
        type: string
      calculate_type:
        type: string
      created_date:
        type: string
      email:
        type: string
      house_number:
        type: string
      id:
        type: integer
      name:
        type: string
      note:
        type: string
      plaats:
        type: string
      postal_code:
        type: string
      status:
        type: boolean
    type: object
  models.Company:
    properties:
      company_info:
        $ref: '#/definitions/models.CompanyInfo'
      company_representative:
        $ref: '#/definitions/models.CompanyRepresentative'
      created_at:
        type: string
      email:
        type: string
      id:
        type: integer
      name:
        type: string
      phone:
        type: string
      status:
        type: boolean
      tags:
        type: string
    type: object
  models.CompanyInfo:
    properties:
      address:
        type: string
      btw:
        type: string
      company_name:
        type: string
      country:
        type: string
      kvk:
        type: string
      last_update:
        type: string
      postcode:
        type: string
    type: object
  models.CompanyRepresentative:
    properties:
      email:
        type: string
      name:
        type: string
      phone:
        type: string
    type: object
  models.Member:
    properties:
      address:
        type: string
      bill_to:
        type: string
      building_id:
        type: string
      email:
        type: string
      id:
        type: integer
      invoice_shipping_preference:
        type: string
      name:
        type: string
      phone:
        type: string
      postcode:
        type: string
      status:
        type: boolean
    type: object
  models.Room:
    properties:
      binnenzijde:
        type: string
      building_id:
        type: string
      buitenzijde:
        type: string
      floor_number:
        type: string
      floor_square:
        type: string
      floor_type:
        type: string
      id:
        type: integer
      room_number:
        type: string
      room_type:
        type: string
      seperstie_glas:
        type: string
      usage_type:
        type: string
      wall_type:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: REST API documentation for ERP panel.
  title: ERP Panel API
  version: "1.0"
paths:
  /buildings:
    get:
      description: Gets a list of all buildings
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Building'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieves all buildings
      tags:
      - buildings
    post:
      consumes:
      - application/json
      description: Adds a new building to the database
      parameters:
      - description: Building data
        in: body
        name: building
        required: true
        schema:
          $ref: '#/definitions/models.Building'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Building'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Creates a new building
      tags:
      - buildings
  /buildings/{id}:
    delete:
      description: Deletes a specific building using its ID
      parameters:
      - description: Building ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deletes a building
      tags:
      - buildings
    get:
      description: Gets a specific building using its ID
      parameters:
      - description: Building ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Building'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieves a building by ID
      tags:
      - buildings
    put:
      consumes:
      - application/json
      description: Updates an existing building by ID
      parameters:
      - description: Building ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated building data
        in: body
        name: building
        required: true
        schema:
          $ref: '#/definitions/models.Building'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Building'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Updates a building
      tags:
      - buildings
  /companies:
    get:
      description: Gets a list of all companies
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Company'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieves all companies
      tags:
      - companies
    post:
      consumes:
      - application/json
      description: Adds a new company to the database
      parameters:
      - description: Company data
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/models.Company'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Company'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Creates a new company
      tags:
      - companies
  /companies/{id}:
    delete:
      description: Deletes a specific company using its ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deletes a company
      tags:
      - companies
    get:
      description: Gets a specific company using its ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Company'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieves a company by ID
      tags:
      - companies
    put:
      consumes:
      - application/json
      description: Updates an existing company by ID
      parameters:
      - description: Company ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated company data
        in: body
        name: company
        required: true
        schema:
          $ref: '#/definitions/models.Company'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Company'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Updates a company
      tags:
      - companies
  /members:
    get:
      description: Gets a list of all members
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Member'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieves all members
      tags:
      - members
    post:
      consumes:
      - application/json
      description: Adds a new member to the database
      parameters:
      - description: Member data
        in: body
        name: member
        required: true
        schema:
          $ref: '#/definitions/models.Member'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Member'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Creates a new member
      tags:
      - members
  /members/{id}:
    delete:
      description: Deletes a specific member using its ID
      parameters:
      - description: Member ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deletes a member
      tags:
      - members
    get:
      description: Gets a specific member using its ID
      parameters:
      - description: Member ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Member'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieves a member by ID
      tags:
      - members
    put:
      consumes:
      - application/json
      description: Updates an existing member by ID
      parameters:
      - description: Member ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated member data
        in: body
        name: member
        required: true
        schema:
          $ref: '#/definitions/models.Member'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Member'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Updates a member
      tags:
      - members
  /rooms:
    get:
      description: Gets a list of all rooms
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.Room'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieves all rooms
      tags:
      - rooms
    post:
      consumes:
      - application/json
      description: Adds a new room to the database
      parameters:
      - description: Room data
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/models.Room'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.Room'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Creates a new room
      tags:
      - rooms
  /rooms/{id}:
    delete:
      description: Deletes a specific room using its ID
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: OK
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Deletes a room
      tags:
      - rooms
    get:
      description: Gets a specific room using its ID
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Room'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Retrieves a room by ID
      tags:
      - rooms
    put:
      consumes:
      - application/json
      description: Updates an existing room by ID
      parameters:
      - description: Room ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated room data
        in: body
        name: room
        required: true
        schema:
          $ref: '#/definitions/models.Room'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Room'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Updates a room
      tags:
      - rooms
swagger: "2.0"
